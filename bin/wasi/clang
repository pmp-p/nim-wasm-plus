#!/bin/bash
SDKROOT=$(realpath $(dirname $0)/../..)
. $SDKROOT/config

ROOT=$(pwd)
mkdir -p $ROOT/bin $ROOT/state

#echo WASI_VERSION=$WASI_VERSION

export WASI_SDK_PATH=$ROOT/$WASI_VERSION

if [ -d $WASI_SDK_PATH ]
then
    echo -n
else
    echo downloading wasi-sdk
    wget -c $WASI_URL
    tar xvfz ${WASI_VERSION}*-linux.tar.gz
fi

if echo $0|grep ++$
then
    export COMPILER="${WASI_SDK_PATH}/bin/clang++"
else
    export COMPILER="${WASI_SDK_PATH}/bin/clang"
fi

COMPILER="$COMPILER --sysroot=${WASI_SDK_PATH}/share/wasi-sysroot"

# -Wl,--no-entry -mexec-model=reactor
# https://github.com/WebAssembly/wasi-sdk/issues/110
# https://github.com/WebAssembly/WASI/issues/13


COMPILER="$COMPILER -O0 -g3 -Wno-unused-command-line-argument -fno-fast-math -Wno-unsupported-floating-point-opt -fno-exceptions"

# wasm exports
COMPILER="$COMPILER -Wl,--export-all"
# web model compat ( wasm ctor not in _start/main but _initilalize instead )
if ${NIM_NOMAIN:-false}
then
    echo "

        ******* adding reactor support *********

"
    COMPILER="$COMPILER -Wl,--no-entry -mexec-model=reactor"
fi

# compat layer from wasi-sdk
export COMPILER="$COMPILER -D_WASI_EMULATED_MMAN -D_WASI_EMULATED_SIGNAL -D_WASI_EMULATED_PROCESS_CLOCKS -D_WASI_EMULATED_GETPID"


for arg do
    shift

    arg_is_bad=false

    for badarg in "-ldl" "-pthread" "-lpthread" "-Wl,--eh-frame-hdr" "-Wl,-znoexecstack" "-Wl,-znow" "-Wl,-zrelro" "-Wl,-zrelro,-znow"
    do
        if [ "$arg" = "$badarg" ]
        then
            arg_is_bad=true
            break
        fi
    done

    set -- "$@" "$arg"
done

LINKING=false

if echo "$@" | grep -q ' -l'
then
    LINKING=true
else
    if echo "$@ " | grep -q "\.a "
    then
        LINKING=true
    fi
fi

if $LINKING
then
    cmd="$COMPILER -v $@ -lwasi-emulated-getpid -lwasi-emulated-mman -lwasi-emulated-signal -lwasi-emulated-process-clocks"
else
    cmd="$COMPILER $@"
fi

echo $cmd > $COMPILER_REPLAY

$cmd
