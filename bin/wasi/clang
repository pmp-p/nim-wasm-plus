#!/bin/bash
SDKROOT=$(realpath $(dirname $0)/../..)
. $SDKROOT/config

ROOT=$(pwd)
mkdir -p $ROOT/bin $ROOT/state

#echo WASI_VERSION=$WASI_VERSION

export WASI_SDK_PATH=$ROOT/$WASI_VERSION

if [ -d $WASI_SDK_PATH ]
then
    echo -n
else
    echo downloading wasi-sdk
    wget -c $WASI_URL
    tar xvfz ${WASI_VERSION}*-linux.tar.gz
fi

#echo WASI_SDK_PATH=$WASI_SDK_PATH

export CC="${WASI_SDK_PATH}/bin/clang --sysroot=${WASI_SDK_PATH}/share/wasi-sysroot"

# -Wl,--no-entry -mexec-model=reactor
# https://github.com/WebAssembly/wasi-sdk/issues/110
# https://github.com/WebAssembly/WASI/issues/13


CC="$CC -O0 -g3 -Wno-unused-command-line-argument"

# wasm exports
CC="$CC -Wl,--export-all"
# web model compat ( wasm ctor not in _start/main but _initilalize instead )
if ${NIM_NOMAIN:-false}
then
    echo "

        ******* adding reactor support *********

"
    CC="$CC -Wl,--no-entry -mexec-model=reactor"
fi

# compat layer from wasi-sdk
export CC="$CC -D_WASI_EMULATED_MMAN -D_WASI_EMULATED_SIGNAL -D_WASI_EMULATED_PROCESS_CLOCKS"


for arg do
    shift

    arg_is_bad=false

    for badarg in "-ldl" "-lpthread" "-Wl,--eh-frame-hdr" "-Wl,-znoexecstack" "-Wl,-znow" "-Wl,-zrelro" "-Wl,-zrelro,-znow"
    do
        if [ "$arg" = "$badarg" ]
        then
            arg_is_bad=true
            break
        fi
    done

    set -- "$@" "$arg"
done


if echo "$@" | grep -q ' -l'
then
    cmd="$CC -v $@ -lwasi-emulated-mman -lwasi-emulated-signal -lwasi-emulated-process-clocks"
else
    cmd="$CC $@"
fi
echo $cmd >> $CC_REPLAY
$cmd
